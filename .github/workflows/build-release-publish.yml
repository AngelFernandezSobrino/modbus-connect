name: Build, Release and Publish

on:
  push:
    tags:
      - "**.**.**"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  continuous-integration:
    uses: ./.github/workflows/lint-test.yml

  build-release-publish:
    runs-on: ubuntu-latest
    needs: continuous-integration
    strategy:
      matrix:
        python-version: ["3.11"]
        poetry-version: ["1.3.1"]
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Poetry ${{ matrix.poetry-version }}1
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          poetry install --without dev

      - name: Execute safety
        run: |
          poetry run safety check

      - name: Build python package with poetry
        run: |
          poetry build

      - name: Download reposts and badges artifact
        uses: actions/download-artifact@master
        with:
          name: reports-${{ matrix.python-version }}
          path: action-assets/reports/

      - name: Download reposts and badges artifact
        uses: actions/download-artifact@master
        with:
          name: badges-${{ matrix.python-version }}
          path: action-assets/badges/

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          path: "./action-assets"

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

      - name: Create Release
        uses: ncipollo/release-action@v1.12.0
        with:
          allowUpdates: true

      - name: Publish a Python distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
